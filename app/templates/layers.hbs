{{main-nav model=model}}
<div uk-grid class='layers-grid'>
  <div class='uk-width-1-4@m uk-width-1-3@s'>
    <div class='uk-padding'>
      {{#if model.rasters}}
        {{#each model.rasters as |layer|}}
          <h2>{{layer.title}}</h2>
          <section class='uk-section-small'>
            <div class='slider-label uk-text-meta'>Opacity</div>
            <input class='embed-slider' id={{layer.name}} type='range' min='0' max='1' step='0.1' value={{layer.opacity}} oninput={{action (mut layer.opacity) value='target.value'}} />
          </section>
          <article class="uk-article">
            <p>
              {{{layer.safeDescription}}}
            </p>
            <p class='uk-article-meta uk-margin-bottom'>
              Layer Provided by: {{layer.institution.name}} {{layer.attribution}}
            </p>
          </article>
        {{/each}}
      {{else if model.vectors}}
        {{#each model.vectors as |layer|}}
          <h2>{{layer.title}}</h2>
          <article class="uk-article">
            <p>
              {{{layer.safeDescription}}}
            </p>
            <p class='uk-article-meta uk-margin-bottom'>
              Layer Provided by: {{layer.institution.name}} {{layer.attribution}}
            </p>
          </article>
        {{/each}}
      {{/if}}
    </div>
  </div>

  <div id='base-map' class='uk-width-3-4@m uk-width-2-3@s fullscreen-map'>
    {{#leaflet-map
      lat=33.7489954
      lng=-84.3879824
      zoom=10
      onLoad=(action 'initMap') as |layers|
    }}

      {{layers.tile
        url=baseMap.url
        attribution=baseMap.attribution
        zIndex=1
      }}

      {{#each model.rasters as |wms|}}
        {{wms-tile-layer
          url=wms.url
          layers=wms.layers
          format='image/png'
          transparent=true
          zIndex=10
          opacity=wms.opacity
          onLoad=(action 'mapLayerAdded' wms)
        }}
      {{/each}}

      {{#each model.vectors as |vector|}}
        {{#if (eq vector.vector_feature.length 0)}}
            {{geojson-layer
              geoJSON=vector.remote_geojson
              style=setColor
              interactive=true
              onAdd=(action 'mapLayerAdded' vector)
              onEachFeature=(action 'showShapeFeature' feature)
            }}
          {{else}}
            {{#each vector.vector_feature as |feature|}}
              {{#if (eq feature.geometry_type 'Point')}}
                {{layers.marker
                  onAdd=(action 'mapLayerAdded' vector)
                  location=feature.latLng
                  onClick=(action 'showFeature' feature)
                  icon=(
                    div-icon
                    html='<div class="shadow"><i class="fa fa-map-marker"></i></div>'
                    className='layer-blue-600'
                  )
                  opacity=1
                  class=(if feature.active 'active-feature')
                }}
              {{!-- {{else if feature.filters}}
                {{geojson-layer
                  geoJSON=feature.geojson
                  fillOpacity=data.vector_layer.fillOpacity
                  opacity=data.vector_layer.opacity

                }} --}}
              {{else}}
                {{geojson-layer
                  geoJSON=feature.geojson
                  fillOpacity=data.vector_layer.fillOpacity
                  opacity=data.vector_layer.opacity
                  color=feature.colorHex
                  fillColor=feature.colorHex
                  onAdd=(action 'mapLayerAdded' vector)
                  onEachFeature=(action 'showVectorShapeFeature' feature)
                }}
              {{/if}}
        {{/each}}
      {{/if}}
      {{/each}}
    {{/leaflet-map}}
  </div>
</div>

{{project-ui/feature-popup feature=activeFeature closeFeature=(action 'closeFeature')}}
